// Code generated by cmd/cgo -godefs; DO NOT EDIT.
// cgo -godefs /home/lfj/KrakenPlug/common/device/cambricon/lib/types.go

package lib

import "unsafe"

type CardInfo_t struct {
	Version int32
	Number  uint32
}

type UUID_t struct {
	Version   int32
	Uuid      [37]uint8
	NcsUUID64 uint64
}

type MemoryInfo_t struct {
	Version             int32
	PhysicalMemoryTotal int64
	PhysicalMemoryUsed  int64
	VirtualMemoryTotal  int64
	VirtualMemoryUsed   int64
	ChannelNumber       int64
	ChannelMemoryUsed   [20]int64
}

type VersionInfo_t struct {
	Version            int32
	McuMajorVersion    uint32
	McuMinorVersion    uint32
	McuBuildVersion    uint32
	DriverMajorVersion uint32
	DriverMinorVersion uint32
	DriverBuildVersion uint32
}

type ECCInfo_t struct {
	Version               int32
	OneBitError           uint64
	MultipleOneError      uint64
	MultipleError         uint64
	MultipleMultipleError uint64
	CorrectedError        uint64
	UncorrectedError      uint64
	TotalError            uint64
	AddressForbiddenError uint64
}

type PowerInfo_t struct {
	Version            int32
	Usage              int32
	Cap                int32
	UsageDecimal       int32
	Machine            int32
	CapDecimal         int32
	ThermalDesignPower uint16
	Pad_cgo_0          [2]byte
}

type TemperatureInfo_t struct {
	Version    int32
	Board      int32
	Cluster    [20]int32
	MemoryDie  [8]int32
	Chip       int32
	AirInlet   int32
	AirOutlet  int32
	Memory     int32
	VideoInput int32
	Cpu        int32
}

type FanSpeedInfo_t struct {
	Version         int32
	FanSpeed        int32
	ChassisFanCount int32
	ChassisFan      [12]int32
}

type LLCInfo_t struct {
	Version int32
	Total   uint64
	Hit     uint64
}

type UtilizationInfo_t struct {
	Version                int32
	AverageCoreUtilization int32
	CoreUtilization        [80]int32
}

type FrequencyInfo_t struct {
	Version         int32
	BoardFreq       int32
	DdrFreq         int32
	OvertempDfsFlag uint8
	FastDfsFlag     uint8
	Pad_cgo_0       [2]byte
}

type ProcessInfo_t struct {
	Version            int32
	Pid                uint32
	PhysicalMemoryUsed uint64
	VirtualMemoryUsed  uint64
}

type LibVersionInfo_t struct {
	Version         int32
	LibMajorVersion uint32
	LibMinorVersion uint32
	LibBuildVersion uint32
}

type CardCoreCount_t struct {
	Version int32
	Count   int32
}

type CardClusterCount_t struct {
	Version int32
	Count   int32
}

type CardName_t struct {
	Version int32
	Id      uint32
}

type CodecCount_t struct {
	Version int32
	Count   int32
}

type CodecUtilization_t struct {
	Version          int32
	TotalUtilization [20]int32
}

type CardSN_t struct {
	Version       int32
	Sn            int64
	MotherBoardSn int64
}

type PCIeInfo_t struct {
	Version         int32
	SubsystemId     uint32
	DeviceId        uint32
	Vendor          uint16
	SubsystemVendor uint16
	Domain          uint32
	Bus             uint32
	Device          uint32
	Function        uint32
	PhysicalSlot    *int8
	SlotID          int32
	Pad_cgo_0       [4]byte
}

type PCIethroughput_t struct {
	Version   int32
	PcieRead  int64
	PcieWrite int64
}

type Affinity_t struct {
	Version           int32
	CpuCount          uint32
	CpuAffinityBitMap [1024]uint32
}

type TopologyRelationship_t struct {
	Version  int32
	Relation uint32
}

type CurrentPCIInfo_t struct {
	Version      int32
	CurrentSpeed int32
	CurrentWidth int32
}

type TopologyNodeCapInfo_t struct {
	Next      *TopologyNodeCapInfo_t
	Id        uint8
	Cap       uint16
	Pad_cgo_0 [4]byte
}

type TopologyNode_t struct {
	VirtualRootNode int32
	Domain          int32
	Bus             int32
	Device          int32
	Function        int32
	SubsystemId     uint32
	DeviceId        uint32
	Vendor          uint32
	SubsystemVendor uint32
	DeviceName      *int8
	ClassVal        uint32
	ClassName       *int8
	FirstCap        *TopologyNodeCapInfo_t
	Parent          *TopologyNode_t
	Left            *TopologyNode_t
	Right           *TopologyNode_t
	Child           *TopologyNode_t
	LinkSpeed       uint32
	IsBridge        int32
	IsCardbus       int32
	PrimaryBus      uint8
	SecondaryBus    uint8
	SubordinateBus  uint8
	AcsCtrl         int32
	Pad_cgo_0       [4]byte
}

type CapabilityInfo_t struct {
	Version int32
	Id      uint8
	Cap     uint16
}

type CardHealthState_t struct {
	Version int32
	Health  int32
}

type LinkSpeed_t struct {
	Version   int32
	LinkSpeed int32
}

type VideoCodecUtilization_t struct {
	Version             int32
	VpuCount            int32
	VpuCodecUtilization [20]int32
}

type ImageCodecUtilization_t struct {
	Version             int32
	JpuCount            int32
	JpuCodecUtilization [20]int32
}

type FastAlloc_t struct {
	Version         int32
	FastMemoryTotal int32
	FastMemoryFree  int32
}

type NUMANodeId_t struct {
	Version int32
	NodeId  int32
}

type ScalerUtilization_t struct {
	Version           int32
	ScalerCount       int32
	ScalerUtilization [20]int32
}

type CodecTurbo_t struct {
	Version    int32
	CodecTurbo int32
}

type CardMemoryDieCount_t struct {
	Version int32
	Count   int32
}

type QsfpddStatus_t struct {
	Version int32
	Qdd     [8]int32
}

type MLULinkVersion_t struct {
	Version      int32
	MajorVersion uint32
	MinorVersion uint32
	BuildVersion uint32
}

type MLULinkStatus_t struct {
	Version     int32
	IsActive    uint32
	SerdesState uint32
}

type MLULinkSpeed_t struct {
	Version     int32
	SpeedValue  float32
	SpeedFormat uint32
}

type MLULinkCapability_t struct {
	Version          int32
	P2pTransfer      uint32
	InterlakenSerdes uint32
}

type MLULinkCounter_t struct {
	Version          int32
	CntrReadByte     uint64
	CntrReadPackage  uint64
	CntrWriteByte    uint64
	CntrWritePackage uint64
	ErrReplay        uint64
	ErrFatal         uint64
	ErrEccDouble     uint64
	ErrCRC24         uint64
	ErrCRC32         uint64
	ErrCorrected     uint64
	ErrUncorrected   uint64
}

type MLULinkSetCounter_t struct {
	Version    int32
	SetCounter uint32
}

type MLULinkRemoteInfo_t struct {
	Version      int32
	McSn         int64
	BaSn         int64
	SlotId       uint32
	PortId       uint32
	DevIp        [16]uint8
	Uuid         [37]uint8
	DevIpVersion uint32
	IsIpValid    uint32
	ConnectType  int32
	NcsUUID64    uint64
}

type MLULinkDevSN_t struct {
	Version     int32
	MlulinkMcSn [6]int64
	MlulinkBaSn [6]int64
}

type NvmeSsdInfo_t struct {
	NvmeSn    [21]uint8
	NvmeModel [17]uint8
	NvmeFw    [9]uint8
	NvmeMfc   [9]uint8
}

type PsuInfo_t struct {
	PsuSn    [17]uint8
	PsuModel [17]uint8
	PsuFw    [17]uint8
	PsuMfc   [17]uint8
}

type IbInfo_t struct {
	IbSn    [25]uint8
	IbModel [17]uint8
	IbFw    [3]uint8
	IbMfc   [9]uint8
}

type ChassisInfo_t struct {
	Version            int32
	ChassisSn          uint64
	ChassisProductDate [12]int8
	ChassisPartNum     [13]int8
	ChassisVendorName  [17]int8
	NvmeSsdNum         uint8
	NvmeInfo           [4]NvmeSsdInfo_t
	IbBoardNum         uint8
	IbInfo             [2]IbInfo_t
	PsuNum             uint8
	PsuInfo            [2]PsuInfo_t
	Pad_cgo_0          [7]byte
}

type PCIeFirmwareVersion_t struct {
	Version           int32
	PcieReversion     uint16
	PcieBuildID       uint16
	PcieEngineeringId uint16
	Pad_cgo_0         [2]byte
}

type DeviceCPUUtilization_t struct {
	Version         int32
	ChipUtilization uint16
	CoreNumber      uint8
	CoreUtilization [80]uint8
	Pad_cgo_0       [1]byte
}

type DeviceCPUSamplingInterval_t struct {
	Version          int32
	SamplingInterval uint32
}

type RetiredPageInfo_t struct {
	Version     int32
	Cause       uint32
	PageCount   uint32
	PageAddress [512]uint64
}

type RetiredPageStatus_t struct {
	Version   int32
	IsPending uint32
	IsFailure uint32
}

type RemappedRow_t struct {
	Version       int32
	CorrectRows   uint32
	UncorrectRows uint32
	PendingRows   uint32
	FailedRows    uint32
}

type RetiredPageOperation_t struct {
	Version          int32
	RetirePageOption uint32
}

type CardVfState_t struct {
	Version int32
	VfState int32
}

type MLULinkPortMode_t struct {
	Version     int32
	Mode        uint32
	SupportMode uint32
}

type MLULinkPortRoceCtrl_t struct {
	Version int32
	Field   uint32
	Value   uint32
}

type TinyCoreUtilization_t struct {
	Version             int32
	TinyCoreCount       int32
	TinyCoreUtilization [10]int32
}

type ArmOsMemoryInfo_t struct {
	Version          int32
	ArmOsMemoryTotal int64
	ArmOsMemoryUsed  int64
}

type ChipId_t struct {
	Version   int32
	ChipId    uint8
	Pad_cgo_0 [3]byte
}

type MLUFrequencyStatus_t struct {
	Version                int32
	MluFrequencyLockStatus uint8
	Pad_cgo_0              [3]byte
}

type MLULinkPortIP_t struct {
	Version   int32
	IpVersion uint8
	Ip        [40]int8
	Pad_cgo_0 [3]byte
}

type CRCInfo_t struct {
	Version                 int32
	Die2dieCRCError         uint64
	Die2dieCRCErrorOverflow uint64
}

type DDRInfo_t struct {
	Version          int32
	DataWidth        uint32
	BandWidth        uint32
	BandWidthDecimal uint32
}

type SetIpuFrequency_t struct {
	Version    uint32
	MinIpuFreq uint32
	MaxIpuFreq uint32
}

type ProcessUtilization_t struct {
	Version    uint32
	Pid        uint32
	IpuUtil    uint32
	JpuUtil    uint32
	VpuDecUtil uint32
	VpuEncUtil uint32
	MemUtil    uint32
}

type SupportedIpuFrequency_t struct {
	Version          uint32
	SupportedIpuFreq uint32
}

type TRAVERSE_CALLBACK func(Current []TopologyNode_t, Userdata unsafe.Pointer) int32
