volume:
  cambricon:
    binaries: [
      "kpsmi",
      "cnmon"
    ]
    libraries: [
      "libcndev.so"
    ]
  ascend:
    binaries: [
      "kpsmi",
      "dcmi",
      "npu-smi"
    ]
    libraryDirs: [
      "/usr/local/Ascend/driver/lib64/common",
      "/usr/local/Ascend/driver/lib64/driver"
    ]
  nvidia:
    binaries: [
      "kpsmi",
      "nvidia-smi",
      "nvidia-debugdump",
      "nvidia-persistenced",
      "nv-fabricmanager",
      "nvidia-cuda-mps-control",
      "nvidia-cuda-mps-server"
    ]
    libraries: [
      # utility_libs
      "libnvidia-ml.so",   # Management library 
      "libnvidia-cfg.so",  # GPU configuration 
      "libnvidia-nscq.so", # Topology info for NVSwitches and GPUs 
        
      # compute_libs
      "libcuda.so",                   # CUDA driver library 
      "libcudadebugger.so",           # CUDA Debugger Library 
      "libnvidia-opencl.so",          # NVIDIA OpenCL ICD 
      "libnvidia-gpucomp.so",         # Shared Compiler Library 
      "libnvidia-ptxjitcompiler.so",  # PTX-SASS JIT compiler (used by libcuda) 
      "libnvidia-fatbinaryloader.so", # fatbin loader (used by libcuda) 
      "libnvidia-allocator.so",       # NVIDIA allocator runtime library 
      "libnvidia-compiler.so",        # NVVM-PTX compiler for OpenCL (used by libnvidia-opencl) 
      "libnvidia-pkcs11.so",          # Encrypt/Decrypt library 
      "libnvidia-pkcs11-openssl3.so", # Encrypt/Decrypt library (OpenSSL 3 support) 
      "libnvidia-nvvm.so",            # The NVVM Compiler library 
        
      # video_libs
      "libvdpau_nvidia.so",       # NVIDIA VDPAU ICD 
      "libnvidia-encode.so",      # Video encoder 
      "libnvidia-opticalflow.so", # NVIDIA Opticalflow library 
      "libnvcuvid.so",            # Video decoder 
        
      # graphics_libs
      #"libnvidia-egl-wayland.so",       # EGL wayland platform extension (used by libEGL_nvidia)
      "libnvidia-eglcore.so", # EGL core (used by libGLES*[_nvidia] and libEGL_nvidia) 
      "libnvidia-glcore.so",  # OpenGL core (used by libGL or libGLX_nvidia) 
      "libnvidia-tls.so",     # Thread local storage (used by libGL or libGLX_nvidia) 
      "libnvidia-glsi.so",    # OpenGL system interaction (used by libEGL_nvidia) 
      "libnvidia-fbc.so",     # Framebuffer capture 
      "libnvidia-ifr.so",     # OpenGL framebuffer capture 
      "libnvidia-rtcore.so",  # Optix 
      "libnvoptix.so",        # Optix 
        
      # graphics_libs_glvnd
      #"libGLX.so",                      # GLX ICD loader
      #"libOpenGL.so",                   # OpenGL ICD loader
      #"libGLdispatch.so",               # OpenGL dispatch (used by libOpenGL, libEGL and libGLES*)
      "libGLX_nvidia.so",       # OpenGL/GLX ICD 
      "libEGL_nvidia.so",       # EGL ICD 
      "libGLESv2_nvidia.so",    # OpenGL ES v2 ICD 
      "libGLESv1_CM_nvidia.so", # OpenGL ES v1 common profile ICD 
      "libnvidia-glvkspirv.so", # SPIR-V Lib for Vulkan 
      "libnvidia-cbl.so",       # VK_NV_ray_tracing 
        
      # graphics_libs_compat
      "libGL.so",        # OpenGL/GLX legacy _or_ compatibility wrapper (GLVND) 
      "libEGL.so",       # EGL legacy _or_ ICD loader (GLVND) 
      "libGLESv1_CM.so", # OpenGL ES v1 common profile legacy _or_ ICD loader (GLVND) 
      "libGLESv2.so",    # OpenGL ES v2 legacy _or_ ICD loader (GLVND) 
        
      # ngx_libs
      "libnvidia-ngx.so", # NGX library 
        
      # dxcore_libs
      "libdxcore.so", # Core library for dxcore support 
    ]  
